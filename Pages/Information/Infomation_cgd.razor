@page "/debt/Infomation_cgd"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using DebtInformation.Service
@inject IJSRuntime jsRuntime
@inject HttpClient httpClient
@using System.Linq
@using System.Globalization
@using Radzen
@inject NotificationService NotificationService

@using System.Linq.Dynamic.Core
<style>
    .icon-search {
        display: inline-flex !important;
        justify-content: space-evenly !important;
        align-items: center !important;
        position: relative !important;
        top: 3px !important;
        padding: 15px !important;
        flex-wrap: nowrap !important;
    }

    .mt-5 {
        margin-top: 4rem !important;
    }

   .modal-lg,.modal-xl {
  width: 1000px !important;
}

</style>
<div class="header-page mt-5">
    <h4>ระบบ การซิงค์ข้อมูลหุ้นหนี้ - ข้อมูลหุ้น</h4>
</div>

@if (isLoading)
{
<div style="position: fixed; top: 0; left: 0; right: 0; bottom: 0; display: flex;background-color: #fff;opacity: 50%; justify-content: center; align-items: center; z-index: 9999;">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
   
</div>
 <div class="card mt-3">
        <div class="row" style="margin-left: calc(var(--bs-gutter-x) * .5);margin-bottom: 15px;">
            <div class="row">
                <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                    <label class="form-label" for="">วันที่ผ่านรายการ</label>
                    <div class="form-group ">
                        <div class="input-group">
                            <RadzenDatePicker DateFormat="dd/MM/yyyy" @bind-Value="Operdate" />
                            @* <input class="form-control" type="text" name="operdate" @bind="operdate"> *@
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                    <label class="form-label" for="">เลือกประเภทรายการ</label>
                    <select id="recppaytypeSelect" class="form-select" aria-label="Default select example">
                        <option value="1">ข้อมูลหุ้น</option>
                        <option value="2">ข้อมูลหนี้</option>
                    </select>
                </div>
                @* <div class="col-xl-3 col-md-4col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary" @onclick="Getdetails">ป้อนคำขอกู้</button>
                </div> *@
                @* <div class="col-xl-2 col-md-4 col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary" @onclick="Getdetails">เปลี่ยนแปลงหุ้นหนี้ และค้ำประกัน </button>
                </div>
                <div class="col-xl-2 col-md-4 col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary" @onclick="Getdetails">ใบเปลี่ยนแปลงชำระหนี้ ตาม GDOC</button>
                </div> *@
                @* <div class="col-xl-1 col-md-4 col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary" @onclick="Search">rolback</button>
                </div> *@
            </div>
            <div class="row">
                <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                    <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal"
                        data-bs-target="#incontcollnewtoold" @onclick="lncnvtocontmaster">เพิ่มสัญญาเงินกู้</button>
                </div>
                <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                    <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal"
                        data-bs-target="#shpmadjnchg" @onclick="Shpmadjnchg">เปลี่ยนแปลงหุ้นหนี้ และค้ำประกัน</button>
                </div>
                <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                    <button type="button" class="btn btn-outline-secondary" @onclick="Shpmadjnchg">เปลี่ยนแปลงหุ้นหนี้ และค้ำประกัน</button>
                </div>
                <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                    <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal"
                        data-bs-target="#snyacc" @onclick="Slmbnewtoold">สมาชิก</button>
                </div>
                <div class="col-xl-3 col-md-4col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary" @onclick="lncontcollnewtoold">เพิ่มสัญญาเงินกู้ / ค้ำประกัน</button>
                </div>
                <div class="col-xl-3 col-md-4col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary" IsLoading=@isLoading @onclick="shrchangenewtoold">ใบเปลี่ยนแปลงหุ้น ตามGDOC</button>
                </div> 
                <div class="col-xl-3 col-md-4col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary" @onclick="lnreqcontadjnewtoold">ใบเปลี่ยนแปลงชำระหนี้ ตามGDOC</button>
                </div>
                <div class="col-xl-3 col-md-4col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary" @onclick="slslippayinnewtoold">slip_payin newtoold</button>
                </div>
                <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                    <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal"
                        data-bs-target="#syncmaster" @onclick="lncontstmtnewtoold">ดึง statement เงินกู้</button>
                </div>
                <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                    <button type="button" id="btsyncinsurance" class="btn btn-outline-secondary" data-bs-toggle="modal"
                        data-bs-target="#syncinsurance" @onclick="Sharestmtnewtoold">ดึง statement หุ้น</button>
                </div>
            </div>
            <!-- The Modal -->
            <div class="modal" id="incontcollnewtoold">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <!-- Modal Header -->
                        @if (IsLoading == true)
                        {
                            <div class="spinner"></div>
                        }
                        else
                        {
                            <div class="modal-header">
                                <h4 class="modal-title">ข้อมูลสมาชิก</h4>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <!-- Modal body -->
                            <div class="modal-body">
                                @* <RadzenDataGrid @bind-Value=@selectedItems Data="@data" TItem="IDictionary<string, object>"
                            ColumnWidth="200px" AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand"
                            FilterMode="FilterMode.Advanced" AllowPaging="true" AllowSorting="true">
                            <Columns>
                            @foreach (var column in columns)
                            {
                            <RadzenDataGridColumn TItem="IDictionary<string, object>" Title="@column.Key"
                            Type="column.Value"
                            Property="@GetColumnPropertyExpression(column.Key, column.Value)">
                            <Template>
                            @context[@column.Key]
                            </Template>
                            </RadzenDataGridColumn>
                            }
                            </Columns>
                            </RadzenDataGrid> *@
                                <!-- Modal footer -->
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" @onclick="Prosess">ประมวลผล</button>
                                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="modal" id="shpmadjnchg">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <!-- Modal Header -->
                        <div class="modal-header">
                            <h4 class="modal-title">ข้อมูลสมาชิก</h4>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <!-- Modal body -->
                        <div class="modal-body">
                            <RadzenDataGrid @ref="deptdetailGrid"  IsLoading=@isLoading AllowFiltering="true" AllowPaging="true"
                                AllowSorting="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                Data="@datadetail" TItem="Models.Detail" ColumnWidth="200px" PageSize="4"
                                ShowPagingSummary="true">
                                <Columns>
                                    <RadzenDataGridColumn TItem="Models.Detail" Property="coop_id" Title="COOP_ID">
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="Models.Detail" Property="memcoop_id" Title="memcoop_id">
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="Models.Detail" Property="member_no" Title="member_no">
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="Models.Detail" Property="deptaccount_name"
                                        Title="deptaccount_name">
                                    </RadzenDataGridColumn>
                                </Columns>
                            </RadzenDataGrid>
                            <!-- Modal footer -->
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" @onclick="Prosessi">ประมวลผล</button>
                                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                            </div>
                            @* } *@
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal" id="syncmaster">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <!-- Modal Header -->
                        <div class="modal-header">
                            <h4 class="modal-title">ข้อมูลสมาชิก</h4>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <!-- Modal body -->
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-xl-4 col-md-6 col-sm-6 d-flex flex-column">
                                    <label class="form-label" for="">ชื่อ</label>
                                    <div class="form-group ">
                                        <div class="input-group">
                                            @* <input class="form-control" type="text" name="emp_name"
                                            @bind="emp_name">
                                            *@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-4 col-md-6 col-sm-6 d-flex flex-column">
                                    <label class="form-label" for="">นามสกุล</label>
                                    <div class="form-group ">
                                        <div class="input-group">
                                            @* <input class="form-control" type="text"
                                            name="emp_surname"@bind="emp_surname"> *@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-2 col-md-6 col-sm-6 d-flex flex-column">
                                    @* <button type="button" class="btn
                                    btn-outline-secondary"@onclick="SearchModals">ค้นหา</button> *@
                                </div>
                            </div>
                            @* @if (employeeData != null)
                            { *@
                            <table id="example" class="table mt-2" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>เลขที่สมาชิก</th>
                                        <th>ชื่อ</th>
                                        <th>นามสกุล</th>
                                        <th>ชื่อเล่น</th>
                                        <th>เลขบัตรประชาชน</th>
                                    </tr>
                                </thead>
                                @* @foreach (var Itemmodal in employeeData)
                                {
                                <tbody>
                                <tr>
                                <td><a style="cursor: pointer;"
                                @onclick="() => OpenModal(Itemmodal.emp_no)">@Itemmodal.emp_no</a></td>
                                <td>@Itemmodal.emp_name</td>
                                <td>@Itemmodal.emp_surname</td>
                                <td>@Itemmodal.emp_nickname</td>
                                <td>@Itemmodal.id_card</td>
                                </tr>
                                </tbody>
                                } *@
                            </table>

                            <!-- Modal footer -->
                            <div class="modal-footer">
                                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                            </div>
                            @* } *@
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal" id="syncinsurance">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <!-- Modal Header -->
                        <div class="modal-header">
                            <h4 class="modal-title">ข้อมูลสมาชิก</h4>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <!-- Modal body -->
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-xl-4 col-md-6 col-sm-6 d-flex flex-column">
                                    <label class="form-label" for="">ชื่อ</label>
                                    <div class="form-group ">
                                        <div class="input-group">
                                            @* <input class="form-control" type="text" name="emp_name"
                                            @bind="emp_name">
                                            *@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-4 col-md-6 col-sm-6 d-flex flex-column">
                                    <label class="form-label" for="">นามสกุล</label>
                                    <div class="form-group ">
                                        <div class="input-group">
                                            @* <input class="form-control" type="text"
                                            name="emp_surname"@bind="emp_surname"> *@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-2 col-md-6 col-sm-6 d-flex flex-column">
                                    @* <button type="button" class="btn
                                    btn-outline-secondary"@onclick="SearchModals">ค้นหา</button> *@
                                </div>
                            </div>
                            @* @if (employeeData != null)
                            { *@
                            <table id="example" class="table mt-2" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>เลขที่สมาชิก</th>
                                        <th>ชื่อ</th>
                                        <th>นามสกุล</th>
                                        <th>ชื่อเล่น</th>
                                        <th>เลขบัตรประชาชน</th>
                                    </tr>
                                </thead>
                                @* @foreach (var Itemmodal in employeeData)
                                {
                                <tbody>
                                <tr>
                                <td><a style="cursor: pointer;"
                                @onclick="() => OpenModal(Itemmodal.emp_no)">@Itemmodal.emp_no</a></td>
                                <td>@Itemmodal.emp_name</td>
                                <td>@Itemmodal.emp_surname</td>
                                <td>@Itemmodal.emp_nickname</td>
                                <td>@Itemmodal.id_card</td>
                                </tr>
                                </tbody>
                                } *@
                            </table>

                            <!-- Modal footer -->
                            <div class="modal-footer">
                                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                            </div>
                            @* } *@
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal" id="snyacc">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <!-- Modal Header -->
                        <div class="modal-header">
                            <h4 class="modal-title">ข้อมูลสมาชิก</h4>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <!-- Modal body -->
                        <div class="modal-body">
                            <RadzenDataGrid @ref="deptdetailGrid"  IsLoading=@isLoading AllowFiltering="true" AllowPaging="true"
                                AllowSorting="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                Data="@datadetail" TItem="Models.Detail" ColumnWidth="200px" PageSize="4"
                                ShowPagingSummary="true">
                                <Columns>
                                    <RadzenDataGridColumn TItem="Models.Detail" Property="coop_id" Title="COOP_ID">
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="Models.Detail" Property="memcoop_id" Title="memcoop_id">
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="Models.Detail" Property="member_no" Title="member_no">
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="Models.Detail" Property="deptaccount_name"
                                        Title="deptaccount_name">
                                    </RadzenDataGridColumn>
                                </Columns>
                            </RadzenDataGrid>
                            <!-- Modal footer -->
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" @onclick="Prosessi">ประมวลผล</button>
                                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                            </div>
                            @* } *@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
} else {
<div class="card mt-3">
    <div class="row" style="margin-left: calc(var(--bs-gutter-x) * .5);margin-bottom: 15px;">
        <div class="row">
            <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                <label class="form-label" for="">วันที่ผ่านรายการ</label>
                <div class="form-group ">
                    <div class="input-group">
                        @* <input class="form-control" type="text" name="operdate" @bind="operdate"> *@
                        <RadzenDatePicker DateFormat="dd/MM/yyyy" @bind-Value="Operdate" />
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                <label class="form-label" for="">เลือกประเภทรายการ</label>
                <select id="recppaytypeSelect" class="form-select" aria-label="Default select example">
                    <option value="1">ข้อมูลหุ้น</option>
                    <option value="2">ข้อมูลหนี้</option>
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary" @onclick="lncnvtocontmaster">เพิ่มสัญญาเงินกู้</button>
            </div>
            <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary"  @onclick="Shpmadjnchg">เปลี่ยนแปลงหุ้นหนี้ และค้ำประกัน</button>
            </div>
             <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary" @onclick="Shpmadjnchg">เปลี่ยนแปลงหุ้นหนี้ และค้ำประกัน</button>
            </div>
            <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary"  @onclick="Slmbnewtoold">สมาชิก</button>
            </div>
            <div class="col-xl-3 col-md-4col-sm-6 d-flex flex-column">
            <button type="button" class="btn btn-outline-secondary" @onclick="lncontcollnewtoold">เพิ่มสัญญาเงินกู้ / ค้ำประกัน</button>
            </div>
             <div class="col-xl-3 col-md-4col-sm-6 d-flex flex-column">
            <button type="button" class="btn btn-outline-secondary"  @onclick="shrchangenewtoold">ใบเปลี่ยนแปลงหุ้น ตามGDOC</button>
            </div> 
            <div class="col-xl-3 col-md-4col-sm-6 d-flex flex-column">
            <button type="button" class="btn btn-outline-secondary" @onclick="lnreqcontadjnewtoold">ใบเปลี่ยนแปลงชำระหนี้ ตามGDOC</button>
            </div>
             <div class="col-xl-3 col-md-4col-sm-6 d-flex flex-column">
            <button type="button" class="btn btn-outline-secondary" @onclick="slslippayinnewtoold">slip_payin newtoold</button>
            </div>
            <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                <button type="button" class="btn btn-outline-secondary" @onclick="lncontstmtnewtoold">ดึง statement เงินกู้</button>
            </div>
            <div class="col-xl-3 col-md-4 col-sm-6 d-flex flex-column">
                <button type="button" id="btsyncinsurance" class="btn btn-outline-secondary" @onclick="Sharestmtnewtoold">ดึง statement หุ้น</button>
            </div>
        </div>
        <!-- The Modal -->
        <div class="modal" id="shpmadjnchg">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">ข้อมูลสมาชิก</h4>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <!-- Modal body -->
                    <div class="modal-body">
                        <RadzenDataGrid @ref="deptdetailGrid"  IsLoading=@isLoading AllowFiltering="true" AllowPaging="true"
                            AllowSorting="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Data="@datadetail" TItem="Models.Detail" ColumnWidth="200px" PageSize="4"
                            ShowPagingSummary="true">
                            <Columns>
                                <RadzenDataGridColumn TItem="Models.Detail" Property="coop_id" Title="COOP_ID">
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="Models.Detail" Property="memcoop_id" Title="memcoop_id">
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="Models.Detail" Property="member_no" Title="member_no">
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="Models.Detail" Property="deptaccount_name"
                                    Title="deptaccount_name">
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
                        <!-- Modal footer -->
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="Prosessi">ประมวลผล</button>
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                        </div>
                        @* } *@
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
}

@code {
    void ShowNotification(NotificationMessage message){
        NotificationService.Notify(message);
    }
}
<script>
    document.getElementById("btsyncinsurance").style.display = "none"; // ตั้งค่าให้ปุ่มซ่อนเสมอแรก

    document.getElementById("recppaytypeSelect").addEventListener("change", function () {
        var selectedValue = this.value;

        if (selectedValue === "2") {
            document.getElementById("btsyncinsurance").style.display = "block";
        } else if (selectedValue === "1") {
            document.getElementById("btsyncinsurance").style.display = "none";
        }
    });
</script>


@* @code {
    RadzenDataGrid<Models.Detail> deptdetailGrid;
    List<Models.Detail> datadetail;
    private List<Models.Recppaytype> recppaytype;
    private List<Models.Tofromacc> tofromacc;
    private string deptaccount_no { get; set; }
    public string defaultDate= "01/01/0544";
    DateTime Operdate { get; set; } 
    private string coop_id = "065001";
    private bool isLoading;
async Task Prosessi()
	{
		isLoading = true;
		try{
            isLoading = true;
        }catch(Exception e){
            
        }finally{
            isLoading = false;
        }

    }
    //แปลงวันที่
    public async Task<string> GetConvertedDateTH()
    {
        CultureInfo thaiCulture = new CultureInfo("th-TH");
        string operdate = Operdate.ToString("dd/MM/yyyy");
        if (operdate != defaultDate)
        {
            if (DateTime.TryParseExact(operdate, "dd/MM/yyyy", thaiCulture, DateTimeStyles.None, out DateTime thaiDate))
            {
                int gregorianYear = thaiDate.Year + 0;
                // แปลงวันที่เป็น วันที่เดือน-วัน-ปี ค.ศ.
                string dateOperate = $"{thaiDate.Month:00}-{thaiDate.Day:00}-{gregorianYear}";
                return dateOperate;
            }
            else
            {
                return "false";
            }
        }
        else
        {
            return "false";
        }
	}
	private async Task Getdetails()
	{
		try
		{
			isLoading = true;
			var response = await
				httpClient.GetAsync($"{Apiurl.ApibaseUrl}DepOfInitDataOffline?coop_Control={coop_id}&deptaccount_No={deptaccount_no}");
			response.EnsureSuccessStatusCode();

			var json = await response.Content.ReadAsStringAsync();
			var apiResponse = Newtonsoft.Json.JsonConvert.DeserializeObject<Models.ApiResponse>(json);
			if (apiResponse.status)
			{
				datadetail = new List<Models.Detail> { apiResponse.data };
				Console.WriteLine($"API request failed: {datadetail}");
			}
			else
			{
	// Handle error case
				Console.WriteLine($"API request failed: {apiResponse.message}");
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.ToString());
		}
		finally
		{
			isLoading = false;
		}
	}
    private async Task lncnvtocontmaster()
	{
		try
		{
            isLoading = true;
			var response = await httpClient.GetAsync($"{Apiurl.Apibase}lncnvtocontmaster_CGD");
            response.EnsureSuccessStatusCode();
            var data = await response.Content.ReadAsStringAsync();
            ProcessResponse(data);
            if(data == "OK"){
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success Summary", Detail = "Success Detail", Duration = 1500 });
            }
            Console.WriteLine($"API request successful: {data}");
		}
		catch (Exception ex)
		{
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = ex.Message, Duration = 1500 });

			Console.WriteLine(ex.ToString());
		}
		finally
		{
			isLoading = false;
		}
	}
	private async Task lncontcollnewtoold()
	{
	    string dateOperate = await GetConvertedDateTH();
       if (dateOperate == "false")
		{
			ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = "กรุณากรอกวันที่", Duration = 1500 });
		}
		else
		{
        isLoading = true;
		try
		{
			var response = await httpClient.GetAsync($"{Apiurl.Apibase}lncontcollnewtoold_CGD?dateTime={dateOperate}");
            response.EnsureSuccessStatusCode();
            var data = await response.Content.ReadAsStringAsync();
            ProcessResponse(data);
            if(data == "OK"){
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success Summary", Detail = "Success Detail", Duration = 1500 });
            }
            Console.WriteLine($"API request successful: {data}");
		}
		catch (Exception ex)
		{
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = ex.Message, Duration = 1500 });
			Console.WriteLine(ex.ToString());
		}
		finally
		{
			isLoading = false;
		}
        }
	}
    private async Task Shpmadjnchg()
    {
	    string dateOperate = await GetConvertedDateTH();
          if (dateOperate == "false")
		{
			ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = "กรุณากรอกวันที่", Duration = 1500 });
		}
		else
		{
        isLoading = true;
        try
        {
            var response = await httpClient.GetAsync($"{Apiurl.Apibase}shpmadjnchg?dateTime={dateOperate}");
            response.EnsureSuccessStatusCode();
            var data = await response.Content.ReadAsStringAsync();
            ProcessResponse(data);
            if(data == "OK"){
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success Summary", Detail = "Success Detail", Duration = 1500 });
            }
            Console.WriteLine($"API request successful: {data}");
        }
        catch (Exception ex)
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = ex.Message, Duration = 1500 });

            Console.WriteLine($"API request failed: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
        }
    }
    private async Task Slmbnewtoold()
        {
	    string dateOperate = await GetConvertedDateTH();
          if (dateOperate == "false")
		{
			ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = "กรุณากรอกวันที่", Duration = 1500 });
		}
		else
		{
        isLoading = true;
            try
            {
                var response = await httpClient.GetAsync($"{Apiurl.Apibase}slmbnewtoold_CGD?dateTime={dateOperate}");
                response.EnsureSuccessStatusCode();
                var data = await response.Content.ReadAsStringAsync();
                ProcessResponse(data);
                if(data == "OK"){
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success Summary", Detail = "Success Detail", Duration = 1500 });
            }
                Console.WriteLine($"API request successful: {data}");
            }
            catch (Exception ex)
            {
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = ex.Message, Duration = 1500 });

                Console.WriteLine($"API request failed: {ex.Message}");
            }
            finally
            {
                isLoading = false;
            }
            }
        }
    private async Task lncontstmtnewtoold()
    {
	    string dateOperate = await GetConvertedDateTH();
          if (dateOperate == "false")
		{
			ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = "กรุณากรอกวันที่", Duration = 1500 });
		}
		else
		{
        isLoading = true;
        try
        {
            var response = await httpClient.GetAsync($"{Apiurl.Apibase}lncontstmtnewtoold_CGD?dateTime={dateOperate}");
            response.EnsureSuccessStatusCode();
            var data = await response.Content.ReadAsStringAsync();
            ProcessResponse(data);
             if(data == "OK"){
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success Summary", Detail = "Success Detail", Duration = 1500 });
            }
            Console.WriteLine($"API request successful: {data}");
        }
        catch (Exception ex)
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = ex.Message, Duration = 1500 });

            Console.WriteLine($"API request failed: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
        }
    }
	private async Task shrchangenewtoold()
	{
		string dateOperate = await GetConvertedDateTH();
		if (dateOperate == "false")
		{
			ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = "กรุณากรอกวันที่", Duration = 1500 });
		}
		else
		{
            isLoading = true;
			try
			{
				var response = await httpClient.GetAsync($"{Apiurl.Apibase}shrchangenewtoold?dateTime={dateOperate}");
				response.EnsureSuccessStatusCode();
				var data = await response.Content.ReadAsStringAsync();
				ProcessResponse(data);
				if (data == "OK")
				{
					ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success Summary", Detail = "Success Detail", Duration = 1500 });
				}
				Console.WriteLine($"API request successful: {data}");
			}
			catch (Exception ex)
			{
				Console.WriteLine($"API request failed: {ex.Message}");
				ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = ex.Message, Duration = 1500 });
			}
			finally
			{
				isLoading = false;
			}
		}
	}
    private async Task Sharestmtnewtoold()
    {
        string dateOperate = await GetConvertedDateTH();
          if (dateOperate == "false")
		{
			ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = "กรุณากรอกวันที่", Duration = 1500 });
		}
		else
		{
        isLoading = true;
        try
        {
            var response = await httpClient.GetAsync($"{Apiurl.Apibase}sharestmtnewtoold_CGD?dateTime={dateOperate}");
            response.EnsureSuccessStatusCode();
            var data = await response.Content.ReadAsStringAsync();
            ProcessResponse(data);
             if(data == "OK"){
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success Summary", Detail = "Success Detail", Duration = 1500 });
            }
            Console.WriteLine($"API request successful: {data}");
        }
        catch (Exception ex)
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = ex.Message, Duration = 1500 });

            Console.WriteLine($"API request failed: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
        }
    }
    private async Task lnreqcontadjnewtoold()
    {
	    string dateOperate = await GetConvertedDateTH();
          if (dateOperate == "false")
		{
			ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = "กรุณากรอกวันที่", Duration = 1500 });
		}
		else
		{
        isLoading = true;
        try
        {
            var response = await httpClient.GetAsync($"{Apiurl.Apibase}lnreqcontadjnewtoold_GDOC?dateTime={dateOperate}");
            response.EnsureSuccessStatusCode();
            var data = await response.Content.ReadAsStringAsync();
            ProcessResponse(data);
            if(data == "OK"){
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success Summary", Detail = "Success Detail", Duration = 1500 });
            }
            Console.WriteLine($"API request successful: {data}");
        }
        catch (Exception ex)
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = ex.Message, Duration = 1500 });

            Console.WriteLine($"API request failed: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
        }
    }
     private async Task slslippayinnewtoold()
    {
	    string dateOperate = await GetConvertedDateTH();
          if (dateOperate == "false")
		{
			ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = "กรุณากรอกวันที่", Duration = 1500 });
		}
		else
		{
        isLoading = true;
        try
        {
            var response = await httpClient.GetAsync($"{Apiurl.Apibase}slslippayinnewtoold?dateTime={dateOperate}");
            response.EnsureSuccessStatusCode();
            var data = await response.Content.ReadAsStringAsync();
            ProcessResponse(data);
             if(data == "OK"){
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success Summary", Detail = "Success Detail", Duration = 1500 });
            }
            Console.WriteLine($"API request successful: {data}");
        }
        catch (Exception ex)
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = ex.Message, Duration = 1500 });

            Console.WriteLine($"API request failed: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
        }
    }
    private Models.Informations Item = new Models.Informations();
    private void ProcessResponse(string data)
    {
        try
        {
            var item = Newtonsoft.Json.JsonConvert.DeserializeObject<Models.Informations>(data);
        
            if (item != null)
            {
                Item.status = item.status;
            }
            else
            {
                Console.WriteLine($"Failed to deserialize data to JSON object: {data}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deserializing JSON: {ex.Message}");
        }
    }
} *@
@code {
    private List<DebtInfomation.Employeee> employeee;
    public bool IsLoading = false;
    private async Task Prosess()
    {
        IsLoading = true;
        // Simulate a 1-second delay
        await Task.Delay(1000);

        @* IsLoading = false; *@
    }
    @* public class Employeee
    {
        public string coop_id { get; set; }
        public string memcoop_id { get; set; }
        public string member_no { get; set; }
        public string membcat_code { get; set; }
        public string deptaccount_no { get; set; }
        public string deptaccount_name { get; set; }
        public string dept_objective { get; set; }
        public string depttype_desc { get; set; }
    } *@

}
